trigger:
 branches:
   include:
     - development
 paths:
   include:
     - server/open-weather

variables:
  major: '1' 
  minor: '0' 
  patch: '0'
  build: $[counter(variables['Build.SourceBranchName'], 1)]
  root: 'server/open-weather'
  buildConfiguration: 'Release'
  buildDirectory: '$(Build.BinariesDirectory)/build'
  publishDirectory: '$(Build.ArtifactStagingDirectory)/publish'

stages:
  - stage: Set_version 
    jobs: 
    - job: SetVersionJob 
      pool: Proxmox agent
      steps: 
        - script: | 
            echo "##vso[task.setvariable variable=FullVersion]$(major).$(minor).$(patch)-$(Build.SourceBranchName).$(build)"
          displayName: 'Set Full Version Number' 
       
  - stage: Build_and_package_GRPC_server
    dependsOn: Set_version
    jobs:
      - job: BuildJob
        pool: Proxmox agent
        steps:
          - task: DotNetCoreCLI@2
            displayName: Restore dependencies
            inputs:
              command: 'restore'
              projects: '$(root)/OpenWeather.Adapters.GRPC/OpenWeather.Adapters.GRPC.csproj'
              arguments: '--force'
          - task: CmdLine@2
            displayName: 'List files'
            inputs:
              script: |
                inputs: script: 'ls -R /azp/_work/1/s/server/open-weather/OpenWeather.Adapters.GRPC/'
          - task: DotNetCoreCLI@2
            displayName: Build new artefact
            inputs:
              command: 'build'
              projects: '$(root)/OpenWeather.Adapters.GRPC/OpenWeather.Adapters.GRPC.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(buildDirectory)'
          - task: DotNetCoreCLI@2
            displayName: Publish artefact
            inputs:
              command: 'publish'
              projects: '$(root)/OpenWeather.Adapters.GRPC/OpenWeather.Adapters.GRPC.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(publishDirectory) --no-build'
          - task: PublishBuildArtifacts@1 
            inputs: 
              PathtoPublish: '$(publishDirectory)' 
              ArtifactName: 'Server-$(FullVersion)' 
              publishLocation: 'Container'